package com.wintech.datacenter.client;

import java.io.DataOutputStream;
import java.net.Socket;

public class ClientWriteHandlerThread implements Runnable {
	private Socket client;
	private DataOutputStream out;// 输入流对象，读取服务器的响应信息
	private DataOutputStream in;// 输出流对象，向服务器发送数据

	public ClientWriteHandlerThread(Socket client) {
		this.client = client;
	}

	@Override
	public void run() {
		try {
			out = new DataOutputStream(client.getOutputStream());// 输出信息到服务器端
			// 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46
			byte[] bt = { (byte) 0x7E, (byte) 0x32, (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x34, (byte) 0x37,
					(byte) 0x30, (byte) 0x30, (byte) 0x35, (byte) 0x30, (byte) 0x46, (byte) 0x43, (byte) 0x30,
					(byte) 0x30,

					(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42,
					(byte) 0x34, (byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

					(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42,
					(byte) 0x34, (byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

					(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42,
					(byte) 0x34, (byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

					(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42,
					(byte) 0x34, (byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

					(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42,
					(byte) 0x34, (byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

					(byte) 0x30, (byte) 0x43, (byte) 0x34, (byte) 0x45, (byte) 0x34, (byte) 0x38, (byte) 0x42,
					(byte) 0x34, (byte) 0x41, (byte) 0x33, (byte) 0x39, (byte) 0x45,

					(byte) 0x35, (byte) 0x46, (byte) 0x35, (byte) 0x33, (byte) 0x39, (byte) 0x34, (byte) 0x45,
					(byte) 0x36, (byte) 0x30, (byte) 0x36,

					(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

					(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

					(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

					(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

					(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

					(byte) 0x30, (byte) 0x31, (byte) 0x39, (byte) 0x34, (byte) 0x45, (byte) 0x36,

					(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

					(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

					(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

					(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

					(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

					(byte) 0x30, (byte) 0x31, (byte) 0x41, (byte) 0x36, (byte) 0x42, (byte) 0x30,

					(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31,
					(byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44,
					(byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37,
					(byte) 0x44, (byte) 0x31, (byte) 0x34,

					(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31,
					(byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44,
					(byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37,
					(byte) 0x44, (byte) 0x31, (byte) 0x34,

					(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31,
					(byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44,
					(byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37,
					(byte) 0x44, (byte) 0x31, (byte) 0x34,

					(byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31,
					(byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44,
					(byte) 0x31, (byte) 0x34, (byte) 0x37, (byte) 0x44, (byte) 0x31, (byte) 0x34, (byte) 0x37,
					(byte) 0x44, (byte) 0x31, (byte) 0x34,

					(byte) 0x43, (byte) 0x36, (byte) 0x30, (byte) 0x31,

					(byte) 0x0D };//
			// Info 125字节+1字节=0xFC=0000 1111 1100
			// lenth 50FC
			// chksum C601
			// 0011 1001 1111 1111
			out.write(bt);// 输出信息
			out.flush();
			ClientReadHandlerThread.str = null;
			if (ClientReadHandlerThread.str != null) {
				System.out.println(">>>>>>>>>>>>>>>>>>ClientReadHandlerThread.str=" + ClientReadHandlerThread.str);
				out.write(bt);// 输出信息
				out.flush();
				ClientReadHandlerThread.str = null;
				// Thread.sleep(5000);
			}

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (client != null) {
					client = null;
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
}
